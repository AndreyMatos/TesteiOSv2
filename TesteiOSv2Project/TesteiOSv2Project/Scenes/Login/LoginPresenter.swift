//
//  LoginPresenter.swift
//  TesteiOSv2Project
//
//  Created by Andrey on 11/06/20.
//  Copyright (c) 2020 Andrey Matos. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginPresentationLogic
{
    func presentUserData(response: Login.FetchUser.Response)
    func presentErrorMessage(message: String)
}

class LoginPresenter: LoginPresentationLogic
{
    weak var viewController: LoginDisplayLogic?
    let currencyFormatter: NumberFormatter = {
        let currencyFormatter = NumberFormatter()
        currencyFormatter.numberStyle = .currency
        currencyFormatter.locale = Locale(identifier: "pt_BR")
        return currencyFormatter
    }()
    
    func presentUserData(response: Login.FetchUser.Response)
    {
        if let error = response.error,
            let message = error.message{
            viewController?.displayAlertError(message: message)
        }else{
            let viewModel = generateViewModel(response: response)
            viewController?.displayBalanceScreen(viewModel: viewModel)
        }
    }
    
    private func generateViewModel(response: Login.FetchUser.Response) -> Login.FetchUser.ViewModel{
        let displayedUser = Login.FetchUser.ViewModel.DisplayedUser(id: response.userAccount?.userId ?? 0,
                                                                    name: response.userAccount?.name ?? "",
                                                                    account: response.userAccount?.name ?? "",
                                                                    balance: currencyFormatter.string(from: (response.userAccount?.balance ?? 0.0) as NSNumber) ?? "")
        return Login.FetchUser.ViewModel(displayedUser: displayedUser)
    }
    
    func presentErrorMessage(message: String){
        viewController?.displayAlertError(message: message)
    }
}
